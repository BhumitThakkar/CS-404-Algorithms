 
  ----jGRASP exec: java Asst_5
 YOUR NAME HERE
 CS-404, Fall 2019, Assignment 5
 
 ======== Testing Problem 2 ============================================
 
 267 is cost of MST. Here is the MST: 
 {{1, 2}, {2, 6}, {4, 1}, {5, 2}, {6, 3}, {7, 1}}
 
 267 is cost of MST. Here is the MST: 
 {{1, 7}, {2, 1}, {3, 6}, {4, 1}, {5, 2}, {6, 2}}
 
 436 is cost of MST. Here is the MST: 
 {{1, 6}, {2, 5}, {3, 2}, {5, 4}, {6, 7}, {7, 2}, {8, 5}}
 
 45 is cost of MST. Here is the MST: 
 {{2, 1}, {3, 5}, {4, 6}, {5, 6}, {6, 2}}
 
 -1 is cost of MST. There is NO Spanning Tree for this graph!
 
 
 ======== Testing Problem 3 ============================================
 
 Here is the touch array: 
 
   touch[1] = 5
   touch[2] = 4
   touch[3] = 8
   touch[4] = 9
   touch[5] = 5
   touch[6] = 8
   touch[7] = 4
   touch[8] = 2
   touch[9] = 5
   touch[10] = 3
   touch[11] = 9
   touch[12] = 1
 
 Here are the paths: 
 
 v5 to v1:  v5 v1
 v5 to v2:  v5 v9 v4 v2
 v5 to v3:  v5 v9 v4 v2 v8 v3
 v5 to v4:  v5 v9 v4
 v5 to v5:  v5
 v5 to v6:  v5 v9 v4 v2 v8 v6
 v5 to v7:  v5 v9 v4 v7
 v5 to v8:  v5 v9 v4 v2 v8
 v5 to v9:  v5 v9
 v5 to v10:  v5 v9 v4 v2 v8 v3 v10
 v5 to v11:  v5 v9 v11
 v5 to v12:  v5 v1 v12
 
 
 ======== Testing Problem 4 ============================================
 
 Here is the touch array: 
 
   touch[1] = 1
   touch[2] = 4
   touch[3] = 5
   touch[4] = 1
   touch[5] = 1
   touch[6] = 8
   touch[7] = 9
   touch[8] = 1
   touch[9] = 5
 
 Here are the paths and costs: 
 
 v1 to v1 (cost 0):  v1
 v1 to v2 (cost 380):  v1 v4 v2
 v1 to v3 (cost 90):  v1 v5 v3
 v1 to v4 (cost 200):  v1 v4
 v1 to v5 (cost 40):  v1 v5
 v1 to v6 (cost 810):  v1 v8 v6
 v1 to v7 (cost 150):  v1 v5 v9 v7
 v1 to v8 (cost 140):  v1 v8
 v1 to v9 (cost 60):  v1 v5 v9
 
 
 Here is the touch array: 
 
   touch[1] = 5
   touch[2] = 7
   touch[3] = 4
   touch[4] = 7
   touch[5] = 2
   touch[6] = 8
   touch[7] = 7
   touch[8] = 7
 
 Here are the paths and costs: 
 
 v7 to v1 (cost 175):  v7 v2 v5 v1
 v7 to v2 (cost 110):  v7 v2
 v7 to v3 (cost 150):  v7 v4 v3
 v7 to v4 (cost 80):  v7 v4
 v7 to v5 (cost 130):  v7 v2 v5
 v7 to v6 (cost 120):  v7 v8 v6
 v7 to v7 (cost 0):  v7
 v7 to v8 (cost 40):  v7 v8
 
 
 ======== Testing Problem 5 ============================================
 
 Smart Greedy Coin Change with n = 16 cents, denominations: 1 5 10 12 
 Min number of coins needed is 3:
  
 0 coins of denomination 12
 1 coins of denomination 10
 1 coins of denomination 5
 1 coins of denomination 1
 
 
 Smart Greedy Coin Change with n = 143 cents, denominations: 1 3 9 12 17 29 
 Min number of coins needed is 7:
  
 4 coins of denomination 29
 1 coins of denomination 17
 0 coins of denomination 12
 1 coins of denomination 9
 0 coins of denomination 3
 1 coins of denomination 1
 
 
 Smart Greedy Coin Change with n = 54 cents, denominations: 1 8 13 19 
 Min number of coins needed is 6:
  
 2 coins of denomination 19
 1 coins of denomination 13
 0 coins of denomination 8
 3 coins of denomination 1
 
 
 
 ======== Testing Problem 6 ============================================
 
 n = 3, capacity = 30.0
 Item 1:  profit[1] = 50.0, weight[1] = 5.0
 Item 2:  profit[2] = 140.0, weight[2] = 20.0
 Item 3:  profit[3] = 60.0, weight[3] = 10.0
 
 Greedy total profit: $220.00, using:
 Item 1:  all of it
 Item 2:  all of it
 Item 3:  0.50 of it 
 
 
 n = 4, capacity = 11.0
 Item 1:  profit[1] = 40.0, weight[1] = 2.0
 Item 2:  profit[2] = 30.0, weight[2] = 5.0
 Item 3:  profit[3] = 50.0, weight[3] = 10.0
 Item 4:  profit[4] = 10.0, weight[4] = 5.0
 
 Greedy total profit: $90.00, using:
 Item 1:  all of it
 Item 2:  all of it
 Item 3:  0.40 of it 
 
 
 n = 5, capacity = 11.0
 Item 1:  profit[1] = 20.0, weight[1] = 2.0
 Item 2:  profit[2] = 30.0, weight[2] = 5.0
 Item 3:  profit[3] = 35.0, weight[3] = 7.0
 Item 4:  profit[4] = 12.0, weight[4] = 3.0
 Item 5:  profit[5] = 3.0, weight[5] = 1.0
 
 Greedy total profit: $70.00, using:
 Item 1:  all of it
 Item 2:  all of it
 Item 3:  0.57 of it 
 
 
 n = 5, capacity = 13.0
 Item 1:  profit[1] = 20.0, weight[1] = 2.0
 Item 2:  profit[2] = 30.0, weight[2] = 5.0
 Item 3:  profit[3] = 35.0, weight[3] = 7.0
 Item 4:  profit[4] = 12.0, weight[4] = 3.0
 Item 5:  profit[5] = 3.0, weight[5] = 1.0
 
 Greedy total profit: $80.00, using:
 Item 1:  all of it
 Item 2:  all of it
 Item 3:  0.86 of it 
 
 
 n = 5, capacity = 25.0
 Item 1:  profit[1] = 18.0, weight[1] = 3.0
 Item 2:  profit[2] = 30.0, weight[2] = 6.0
 Item 3:  profit[3] = 40.0, weight[3] = 10.0
 Item 4:  profit[4] = 21.0, weight[4] = 7.0
 Item 5:  profit[5] = 24.0, weight[5] = 12.0
 
 Greedy total profit: $106.00, using:
 Item 1:  all of it
 Item 2:  all of it
 Item 3:  all of it
 Item 4:  0.86 of it 
 
 
 n = 10, capacity = 405.0
 Item 1:  profit[1] = 320.0, weight[1] = 85.0
 Item 2:  profit[2] = 350.0, weight[2] = 95.0
 Item 3:  profit[3] = 900.0, weight[3] = 250.0
 Item 4:  profit[4] = 700.0, weight[4] = 200.0
 Item 5:  profit[5] = 650.0, weight[5] = 195.0
 Item 6:  profit[6] = 420.0, weight[6] = 140.0
 Item 7:  profit[7] = 504.0, weight[7] = 170.0
 Item 8:  profit[8] = 600.0, weight[8] = 230.0
 Item 9:  profit[9] = 150.0, weight[9] = 60.0
 Item 10:  profit[10] = 120.0, weight[10] = 50.0
 
 Greedy total profit: $1480.00, using:
 Item 1:  all of it
 Item 2:  all of it
 Item 3:  0.90 of it 
 
 
 
 ======== Testing Problem 7 ============================================
 
 5 colors used by greedy algorithm, coloring: 
 v_1:  color 1
 v_2:  color 2
 v_3:  color 1
 v_4:  color 2
 v_5:  color 3
 v_6:  color 1
 v_7:  color 3
 v_8:  color 4
 v_9:  color 5
 
 4 colors used by greedy algorithm, coloring: 
 v_1:  color 1
 v_2:  color 1
 v_3:  color 2
 v_4:  color 2
 v_5:  color 3
 v_6:  color 3
 v_7:  color 4
 v_8:  color 4
 
 5 colors used by greedy algorithm, coloring: 
 v_1:  color 1
 v_2:  color 1
 v_3:  color 2
 v_4:  color 2
 v_5:  color 1
 v_6:  color 3
 v_7:  color 4
 v_8:  color 5
 v_9:  color 1
 
 5 colors used by greedy algorithm, coloring: 
 v_1:  color 1
 v_2:  color 1
 v_3:  color 2
 v_4:  color 1
 v_5:  color 3
 v_6:  color 1
 v_7:  color 2
 v_8:  color 2
 v_9:  color 2
 v_10:  color 3
 v_11:  color 4
 v_12:  color 5
 
 
  ----jGRASP: operation complete.
 