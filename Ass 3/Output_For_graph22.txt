 
  ----jGRASP exec: java Asst3_SOLUTIONS
 
 Enter input file name:  graph22.txt
 
 W is:  
 
              1      2      3      4      5      6      7      8      9
 
       1      0    220     70     40     50  99999     80    160  99999
       2    100      0  99999     80     70     90  99999     80    100
       3     70  99999      0    110  99999     80  99999     70  99999
       4     40     80    110      0  99999    100     60  99999    150
       5     30     20     60     80      0     10     50    120     70
       6  99999     90     80     30    150      0    130  99999    190
       7     80  99999  99999     60  99999    130      0     20    150
       8    160     80     70  99999    120  99999     20      0     60
       9  99999  99999  99999    150  99999    190    150     60      0
 
 D is:  
 
              1      2      3      4      5      6      7      8      9
 
       1      0     70     70     40     50     60     80    100    120
       2    100      0    130     80     70     80    100     80    100
       3     70    140      0    110    120     80     90     70    130
       4     40     80    110      0     90    100     60     80    140
       5     30     20     60     40      0     10     50     70     70
       6     70     90     80     30    120      0     90    110    170
       7     80    100     90     60    130    130      0     20     80
       8    100     80     70     80    120    130     20      0     60
       9    160    140    130    140    180    190     80     60      0
 
 P is:  
 
              1      2      3      4      5      6      7      8      9
 
       1      0      5      0      0      0      5      0      7      5
       2      0      0      5      0      0      5      8      0      0
       3      0      5      0      0      1      0      8      0      8
       4      0      0      0      0      1      0      0      7      8
       5      0      0      0      6      0      0      0      7      0
       6      4      0      0      0      4      0      4      7      8
       7      0      8      8      0      1      0      0      0      8
       8      7      0      0      7      0      5      0      0      0
       9      8      8      8      8      8      0      8      0      0
 
 
 The maximum number of edges in a least-cost path is:  4
 
 
 Shortest paths, intermediates only: 
 
 v_1 to v_1:  
 v_1 to v_2:  v_5 
 v_1 to v_3:  
 v_1 to v_4:  
 v_1 to v_5:  
 v_1 to v_6:  v_5 
 v_1 to v_7:  
 v_1 to v_8:  v_7 
 v_1 to v_9:  v_5 
 
 v_2 to v_1:  
 v_2 to v_2:  
 v_2 to v_3:  v_5 
 v_2 to v_4:  
 v_2 to v_5:  
 v_2 to v_6:  v_5 
 v_2 to v_7:  v_8 
 v_2 to v_8:  
 v_2 to v_9:  
 
 v_3 to v_1:  
 v_3 to v_2:  v_1 v_5 
 v_3 to v_3:  
 v_3 to v_4:  
 v_3 to v_5:  v_1 
 v_3 to v_6:  
 v_3 to v_7:  v_8 
 v_3 to v_8:  
 v_3 to v_9:  v_8 
 
 v_4 to v_1:  
 v_4 to v_2:  
 v_4 to v_3:  
 v_4 to v_4:  
 v_4 to v_5:  v_1 
 v_4 to v_6:  
 v_4 to v_7:  
 v_4 to v_8:  v_7 
 v_4 to v_9:  v_7 v_8 
 
 v_5 to v_1:  
 v_5 to v_2:  
 v_5 to v_3:  
 v_5 to v_4:  v_6 
 v_5 to v_5:  
 v_5 to v_6:  
 v_5 to v_7:  
 v_5 to v_8:  v_7 
 v_5 to v_9:  
 
 v_6 to v_1:  v_4 
 v_6 to v_2:  
 v_6 to v_3:  
 v_6 to v_4:  
 v_6 to v_5:  v_4 v_1 
 v_6 to v_6:  
 v_6 to v_7:  v_4 
 v_6 to v_8:  v_4 v_7 
 v_6 to v_9:  v_4 v_7 v_8 
 
 v_7 to v_1:  
 v_7 to v_2:  v_8 
 v_7 to v_3:  v_8 
 v_7 to v_4:  
 v_7 to v_5:  v_1 
 v_7 to v_6:  
 v_7 to v_7:  
 v_7 to v_8:  
 v_7 to v_9:  v_8 
 
 v_8 to v_1:  v_7 
 v_8 to v_2:  
 v_8 to v_3:  
 v_8 to v_4:  v_7 
 v_8 to v_5:  
 v_8 to v_6:  v_5 
 v_8 to v_7:  
 v_8 to v_8:  
 v_8 to v_9:  
 
 v_9 to v_1:  v_8 v_7 
 v_9 to v_2:  v_8 
 v_9 to v_3:  v_8 
 v_9 to v_4:  v_8 v_7 
 v_9 to v_5:  v_8 
 v_9 to v_6:  
 v_9 to v_7:  v_8 
 v_9 to v_8:  
 v_9 to v_9:  
 
 
 
 Shortest paths, all vertices: 
 
 v_1 v_1 
 v_1 v_5 v_2 
 v_1 v_3 
 v_1 v_4 
 v_1 v_5 
 v_1 v_5 v_6 
 v_1 v_7 
 v_1 v_7 v_8 
 v_1 v_5 v_9 
 
 v_2 v_1 
 v_2 v_2 
 v_2 v_5 v_3 
 v_2 v_4 
 v_2 v_5 
 v_2 v_5 v_6 
 v_2 v_8 v_7 
 v_2 v_8 
 v_2 v_9 
 
 v_3 v_1 
 v_3 v_1 v_5 v_2 
 v_3 v_3 
 v_3 v_4 
 v_3 v_1 v_5 
 v_3 v_6 
 v_3 v_8 v_7 
 v_3 v_8 
 v_3 v_8 v_9 
 
 v_4 v_1 
 v_4 v_2 
 v_4 v_3 
 v_4 v_4 
 v_4 v_1 v_5 
 v_4 v_6 
 v_4 v_7 
 v_4 v_7 v_8 
 v_4 v_7 v_8 v_9 
 
 v_5 v_1 
 v_5 v_2 
 v_5 v_3 
 v_5 v_6 v_4 
 v_5 v_5 
 v_5 v_6 
 v_5 v_7 
 v_5 v_7 v_8 
 v_5 v_9 
 
 v_6 v_4 v_1 
 v_6 v_2 
 v_6 v_3 
 v_6 v_4 
 v_6 v_4 v_1 v_5 
 v_6 v_6 
 v_6 v_4 v_7 
 v_6 v_4 v_7 v_8 
 v_6 v_4 v_7 v_8 v_9 
 
 v_7 v_1 
 v_7 v_8 v_2 
 v_7 v_8 v_3 
 v_7 v_4 
 v_7 v_1 v_5 
 v_7 v_6 
 v_7 v_7 
 v_7 v_8 
 v_7 v_8 v_9 
 
 v_8 v_7 v_1 
 v_8 v_2 
 v_8 v_3 
 v_8 v_7 v_4 
 v_8 v_5 
 v_8 v_5 v_6 
 v_8 v_7 
 v_8 v_8 
 v_8 v_9 
 
 v_9 v_8 v_7 v_1 
 v_9 v_8 v_2 
 v_9 v_8 v_3 
 v_9 v_8 v_7 v_4 
 v_9 v_8 v_5 
 v_9 v_6 
 v_9 v_8 v_7 
 v_9 v_8 
 v_9 v_9 
 
 
  ----jGRASP: operation complete.
 